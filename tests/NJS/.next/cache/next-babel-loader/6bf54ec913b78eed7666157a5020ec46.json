{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Acey/next-test/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { store, config } from 'acey';\nimport * as Cookies from 'es-cookie';\nconst STORE_KEY = '_aceyStore';\nconfig.setEnvAsNextJS();\nexport const withAcey = (store, App) => {\n  var _class, _temp;\n\n  return _temp = _class = class Wrap extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"isServer\", () => true);\n\n      _defineProperty(this, \"getClearedProps\", () => {\n        let newProps = {};\n\n        for (let key in this.props) {\n          if (key === 'pageProps') {\n            const copy = _.cloneDeep(this.props[key]);\n\n            delete copy[STORE_KEY];\n            copy['isServer'] = this.isServer();\n            newProps[key] = copy;\n          } else {\n            newProps[key] = this.props[key];\n          }\n        }\n\n        return newProps;\n      });\n\n      _defineProperty(this, \"render\", () => __jsx(App, _extends({}, this.getClearedProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }\n      })));\n\n      !this.isServer() && store.addPendingHydration(props.pageProps[STORE_KEY]);\n    }\n\n  }, _defineProperty(_class, \"getInitialProps\", async ({\n    Component,\n    router,\n    ctx\n  }) => {\n    let pageProps = {};\n    if (!ctx) throw new Error('No page context');\n    const prevInitialPropsFunction = Component.getInitialProps;\n\n    if (ctx.req && ctx.req.headers && ctx.req.headers.cookie) {\n      console.log(Cookies.parse(ctx.req.headers.cookie));\n      store.hydrateCookies(Cookies.parse(ctx.req.headers.cookie));\n    }\n\n    if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx);\n\n    Component.getInitialProps = ctx => pageProps;\n\n    Component.getInitialProps = prevInitialPropsFunction;\n    const ret = {\n      pageProps: _objectSpread({}, pageProps)\n    };\n    ret.pageProps[STORE_KEY] = store.store();\n    return ret;\n  }), _temp;\n};\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps\n  } = props;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default withAcey(store, MyApp);","map":{"version":3,"sources":["/Users/louis/Acey/next-test/pages/_app.js"],"names":["React","_","store","config","Cookies","STORE_KEY","setEnvAsNextJS","withAcey","App","Wrap","Component","constructor","props","newProps","key","copy","cloneDeep","isServer","getClearedProps","addPendingHydration","pageProps","router","ctx","Error","prevInitialPropsFunction","getInitialProps","req","headers","cookie","console","log","parse","hydrateCookies","ret","MyApp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport { store, config } from 'acey'\nimport * as Cookies from 'es-cookie'\n\nconst STORE_KEY = '_aceyStore'\nconfig.setEnvAsNextJS()\n\nexport const withAcey = (store, App) => {\n\n    return class Wrap extends React.Component {\n        \n        constructor(props){\n            super(props)\n            \n            !this.isServer() && store.addPendingHydration(props.pageProps[STORE_KEY]) \n        }\n  \n        static getInitialProps = async ({ Component, router, ctx }) => {\n            let pageProps = {}\n  \n            if (!ctx) throw new Error('No page context');\n            const prevInitialPropsFunction = Component.getInitialProps\n  \n            if (ctx.req && ctx.req.headers && ctx.req.headers.cookie) {\n                console.log(Cookies.parse(ctx.req.headers.cookie))\n                store.hydrateCookies(Cookies.parse(ctx.req.headers.cookie))\n            }\n            \n            if (Component.getInitialProps)\n                pageProps = await Component.getInitialProps(ctx)\n            \n            Component.getInitialProps = (ctx) => pageProps\n            Component.getInitialProps = prevInitialPropsFunction\n  \n            const ret = { \n                pageProps: { ...pageProps }\n            }\n            ret.pageProps[STORE_KEY] = store.store()\n            return ret\n        }\n  \n        isServer = () => typeof window === 'undefined'\n        \n        getClearedProps = () => {\n            let newProps = {}\n            for (let key in this.props){\n                if (key === 'pageProps'){\n                    const copy = _.cloneDeep(this.props[key])\n                    delete copy[STORE_KEY]\n                    copy['isServer'] = this.isServer()\n                    newProps[key] = copy\n                } else {\n                    newProps[key] = this.props[key]\n                }\n            }\n            return newProps\n        }\n  \n        render = () => <App {...this.getClearedProps()} />\n    }\n}\n\nconst MyApp = props => {\n  const { Component, pageProps } = props\n  return (\n    <Component {...pageProps} />\n  )\n}\n\nexport default withAcey(store, MyApp)"]},"metadata":{},"sourceType":"module"}