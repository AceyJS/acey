{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Acey/tests/NJS/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { manager, config } from 'acey';\nexport const withAcey = (App, Acey) => {\n  var _class, _temp;\n\n  const {\n    manager,\n    config\n  } = Acey;\n  config.setEnvAsNextJS();\n  config.done();\n  const STORE_KEY = '_aceyStore';\n  return _temp = _class = class Wrap extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"isServer\", () => true);\n\n      _defineProperty(this, \"getClearedProps\", () => {\n        let newProps = {};\n\n        for (let key in this.props) {\n          if (key === 'pageProps') {\n            const copy = _.cloneDeep(this.props[key]);\n\n            delete copy[STORE_KEY];\n            copy['isServer'] = this.isServer();\n            newProps[key] = copy;\n          } else {\n            newProps[key] = this.props[key];\n          }\n        }\n\n        return newProps;\n      });\n\n      _defineProperty(this, \"render\", () => __jsx(App, _extends({}, this.getClearedProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 26\n        }\n      })));\n\n      if (!this.isServer()) {\n        const store = props.pageProps[STORE_KEY];\n\n        for (const key in store) {\n          console.log(store[key]);\n          _.isEqual(manager.models().node(key).to().plain(), store[key]) && delete store[key];\n        }\n\n        manager.pendingHydrationStore().set(store);\n      }\n    }\n\n  }, _defineProperty(_class, \"getInitialProps\", async ({\n    Component,\n    router,\n    ctx\n  }) => {\n    let pageProps = {};\n    if (!ctx) throw new Error('No page context');\n    const prevInitialPropsFunction = Component.getInitialProps;\n    if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx);\n\n    Component.getInitialProps = ctx => pageProps;\n\n    Component.getInitialProps = prevInitialPropsFunction;\n    const ret = {\n      pageProps: _objectSpread({}, pageProps)\n    };\n    ret.pageProps[STORE_KEY] = manager.store().get();\n    return ret;\n  }), _temp;\n};\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps\n  } = props;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default withAcey(MyApp, {\n  manager,\n  config\n});","map":{"version":3,"sources":["/Users/louis/Acey/tests/NJS/pages/_app.js"],"names":["React","_","manager","config","withAcey","App","Acey","setEnvAsNextJS","done","STORE_KEY","Wrap","Component","constructor","props","newProps","key","copy","cloneDeep","isServer","getClearedProps","store","pageProps","console","log","isEqual","models","node","to","plain","pendingHydrationStore","set","router","ctx","Error","prevInitialPropsFunction","getInitialProps","ret","get","MyApp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport { manager, config } from 'acey'\n\nexport const withAcey = (App, Acey) => {\n    const { manager, config } = Acey\n    \n    config.setEnvAsNextJS()\n    config.done()\n    const STORE_KEY = '_aceyStore'\n  \n    return class Wrap extends React.Component {\n          \n          constructor(props){\n              super(props)\n              if (!this.isServer()){\n                const store = props.pageProps[STORE_KEY]\n                for (const key in store){\n                  console.log(store[key])\n                  _.isEqual(manager.models().node(key).to().plain(), store[key]) && delete store[key]\n                }\n                manager.pendingHydrationStore().set(store)\n              } \n          }\n    \n          static getInitialProps = async ({ Component, router, ctx }) => {\n            let pageProps = {}\n\n            if (!ctx) throw new Error('No page context');\n            const prevInitialPropsFunction = Component.getInitialProps\n                  \n            if (Component.getInitialProps)\n                pageProps = await Component.getInitialProps(ctx)\n            \n            Component.getInitialProps = (ctx) => pageProps\n            Component.getInitialProps = prevInitialPropsFunction\n  \n            const ret = { \n                pageProps: { ...pageProps }\n            }\n            ret.pageProps[STORE_KEY] = manager.store().get()\n            return ret\n          }\n    \n          isServer = () => typeof window === 'undefined'\n          \n          getClearedProps = () => {\n              let newProps = {}\n              for (let key in this.props){\n                  if (key === 'pageProps'){\n                      const copy = _.cloneDeep(this.props[key])\n                      delete copy[STORE_KEY]\n                      copy['isServer'] = this.isServer()\n                      newProps[key] = copy\n                  } else {\n                      newProps[key] = this.props[key]\n                  }\n              }\n              return newProps\n          }\n          render = () => <App {...this.getClearedProps()} />\n      }\n}\n\n\nconst MyApp = props => {\n  const { Component, pageProps } = props\n  return (\n    <Component {...pageProps} />\n  )\n}\n\n\nexport default withAcey(MyApp, {manager, config})"]},"metadata":{},"sourceType":"module"}