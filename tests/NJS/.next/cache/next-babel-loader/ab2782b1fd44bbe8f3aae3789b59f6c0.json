{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useAcey, connect } from 'react-acey';\nimport { Counter, Todolist, User } from '../src/models';\nconst STORE_TYPE = 'store';\n\nclass PCounter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      return __jsx(\"p\", null, \" connected class: \", User.counter().get(), \" \");\n    });\n  }\n\n}\n\nconst PrintCounter = connect([User])(PCounter);\n\nfunction Home(props) {\n  const todolists = [Todolist, User.todolist()];\n  const counters = [Counter, User.counter()];\n  useAcey([Counter, Todolist, User]);\n\n  const method = (list = [], method = '', then = '' | 'store') => {\n    list.forEach(v => {\n      const ret = v[method]();\n      then && ret[then]();\n    });\n  };\n\n  const increment = (then = '' | 'localStore') => {\n    method(counters, 'increment', then);\n    const list = [];\n    todolists.map(l => l.map(t => list.push(t.counter())));\n    method(list, 'increment', then);\n  };\n\n  const decrement = (then = '' | 'localStore') => {\n    method(counters, 'decrement', then);\n    const list = [];\n    todolists.map(l => l.map(t => list.push(t.counter())));\n    method(list, 'decrement', then);\n  };\n\n  const addTodo = (then = '' | 'localStore') => method(todolists, 'add', then);\n\n  const deleteFirst = (then = '' | 'localStore') => method(todolists, 'deleteFirst', then);\n\n  const deleteLast = (then = '' | 'localStore') => method(todolists, 'deleteLast', then);\n\n  const toZZZLast = (then = '' | 'localStore') => method(todolists, 'toZZZLast', then);\n\n  const clearLocalStore = () => {\n    Todolist.localStore().remove();\n    Counter.localStore().remove();\n    User.localStore().remove();\n    location.reload();\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h1\", null, props.id), __jsx(\"button\", {\n    onClick: clearLocalStore\n  }, \"clear local stores\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(PrintCounter, null), __jsx(\"br\", null), __jsx(\"button\", {\n    onClick: () => decrement(STORE_TYPE)\n  }, \"decrement\"), counters.map((v, index) => __jsx(\"span\", {\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    key: index\n  }, v.get())), __jsx(\"button\", {\n    onClick: () => increment(STORE_TYPE)\n  }, \"increment\"), __jsx(\"br\", null), __jsx(\"button\", {\n    onClick: () => addTodo(STORE_TYPE)\n  }, \"Add element\"), __jsx(\"button\", {\n    onClick: () => deleteFirst(STORE_TYPE)\n  }, \"Del 1st element\"), __jsx(\"button\", {\n    onClick: () => deleteLast(STORE_TYPE)\n  }, \"Del last element\"), __jsx(\"button\", {\n    onClick: () => toZZZLast(STORE_TYPE)\n  }, \"ToZZ last\"), __jsx(\"div\", null, todolists.map((list, index) => {\n    return __jsx(\"div\", {\n      key: index\n    }, __jsx(\"h1\", null, \"Todolist \", index), list.map((todo, index) => {\n      return __jsx(\"div\", {\n        key: index\n      }, __jsx(\"span\", null, todo.content()), __jsx(\"span\", null, \" : \"), __jsx(\"span\", null, todo.ID()), __jsx(\"span\", null, \" = \"), __jsx(\"span\", {\n        style: {\n          color: 'red'\n        }\n      }, todo.counter().get()));\n    }));\n  })));\n}\n\nexport async function getServerSideProps(context) {\n  Counter.increment();\n  return {\n    props: {\n      id: 10\n    } // will be passed to the page component as props\n\n  };\n}\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}