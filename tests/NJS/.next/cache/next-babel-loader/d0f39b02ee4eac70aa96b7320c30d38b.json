{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Acey/next-test/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useAcey } from 'acey';\nimport { Counter, Todolist, User } from '../src/models';\nconst STORE_TYPE = 'cookie';\n\nconst Home = props => {\n  const counters = [Counter, User.counter()];\n  const todolist = [Todolist, User.todolist()];\n  useAcey([Counter, Todolist, User]);\n\n  const method = (list = [], method = '', then = '' | 'coookie' | 'localStore') => {\n    list.forEach(v => {\n      const ret = v[method]();\n      then && ret[then]();\n    });\n  };\n\n  const increment = (then = '' | 'coookie' | 'localStore') => method(counters, 'increment', then);\n\n  const decrement = (then = '' | 'coookie' | 'localStore') => method(counters, 'decrement', then);\n\n  const addTodo = (then = '' | 'coookie' | 'localStore') => method(todolist, 'add', then);\n\n  const clearAllCookie = () => {\n    Todolist.removeCookies();\n    Counter.removeCookies();\n    User.removeCookies();\n    location.reload();\n  };\n\n  const clearLocalStore = () => {\n    Todolist.removeLocalStore();\n    Counter.removeLocalStore();\n    User.removeLocalStore();\n    location.reload();\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: clearAllCookie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"clear cookies\"), __jsx(\"button\", {\n    onClick: clearLocalStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"clear local stores\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: () => decrement(STORE_TYPE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"decrement\"), counters.map((v, index) => __jsx(\"span\", {\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 35\n    }\n  }, v.get())), __jsx(\"button\", {\n    onClick: () => increment(STORE_TYPE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"increment\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, Todolist.map((v, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, v.content(), \" : \"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, v.ID()));\n  })));\n};\n\nHome.getInitialProps = ({\n  query\n}) => {\n  //Counter.increment()\n  return {\n    id: 10\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/louis/Acey/next-test/pages/index.js"],"names":["useAcey","Counter","Todolist","User","STORE_TYPE","Home","props","counters","counter","todolist","method","list","then","forEach","v","ret","increment","decrement","addTodo","clearAllCookie","removeCookies","location","reload","clearLocalStore","removeLocalStore","map","index","marginLeft","marginRight","get","content","ID","getInitialProps","query","id"],"mappings":"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","sourcesContent":["import { useAcey } from 'acey'\nimport { Counter, Todolist, User } from '../src/models'\n\nconst STORE_TYPE = 'cookie'\n\nconst Home = (props) => {\n  \n  const counters = [Counter, User.counter()]\n  const todolist = [Todolist, User.todolist()]\n\n  useAcey([\n    Counter,\n    Todolist,\n    User\n  ])\n\n  const method = (list = [], method = '', then = '' | 'coookie' | 'localStore') => {\n    list.forEach((v) => {\n      const ret = v[method]()\n      then && ret[then]()\n    })\n  }\n  \n  const increment = (then = '' | 'coookie' | 'localStore') => method(counters, 'increment', then)\n  const decrement = (then = '' | 'coookie' | 'localStore') => method(counters, 'decrement', then)\n  const addTodo = (then = '' | 'coookie' | 'localStore') =>  method(todolist, 'add', then)\n\n  const clearAllCookie = () => {\n    Todolist.removeCookies()\n    Counter.removeCookies()\n    User.removeCookies()\n    location.reload();\n  }\n\n  const clearLocalStore = () => {\n    Todolist.removeLocalStore()\n    Counter.removeLocalStore()\n    User.removeLocalStore()\n    location.reload();\n  }\n\n  return (\n    <div className=\"container\">\n      <button onClick={clearAllCookie}>clear cookies</button>\n      <button onClick={clearLocalStore}>clear local stores</button>\n      <br />\n      <br />\n\n      <button onClick={() => decrement(STORE_TYPE)}>decrement</button>\n      {counters.map((v, index) => <span style={{marginLeft: 10, marginRight: 10}} key={index}>{v.get()}</span>)}\n      <button onClick={() => increment(STORE_TYPE)}>increment</button>\n      <br />\n\n\n      <div>\n        {Todolist.map((v, index) => {\n          return (\n            <div key={index}>\n              <span>{v.content()} : </span>\n              <span>{v.ID()}</span>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nHome.getInitialProps = ({ query }) => {\n  //Counter.increment()\n  return {\n    id: 10\n  }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}