{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/louis/video/counter-next/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Model, useAcey } from 'acey';\n\nvar CounterModel = /*#__PURE__*/function (_Model) {\n  _inherits(CounterModel, _Model);\n\n  var _super = _createSuper(CounterModel);\n\n  function CounterModel(data, options) {\n    var _this;\n\n    _classCallCheck(this, CounterModel);\n\n    _this = _super.call(this, data, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"get\", function () {\n      return _this.state.counter;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"increment\", function () {\n      return _this.setState({\n        counter: _this.get() + 1\n      }).save().cookie();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decrement\", function () {\n      return _this.setState({\n        counter: _this.get() - 1\n      }).save().cookie();\n    });\n\n    return _this;\n  }\n\n  return CounterModel;\n}(Model);\n\nvar Counter = new CounterModel({\n  counter: 0\n}, {\n  connected: true,\n  key: 'counter'\n});\nexport default function Home() {\n  _s();\n\n  useAcey([Counter]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: Counter.decrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"decrement\"), Counter.get(), __jsx(\"button\", {\n    onClick: Counter.increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"increment\"));\n}\n\n_s(Home, \"qTdWqdOQ7gFO3TfbS6/s2CUwZgs=\", false, function () {\n  return [useAcey];\n});\n\n_c = Home;\n\nHome.getInitialProps = function (_ref) {\n  var query = _ref.query;\n  //Counter state updated on server side\n  Counter.setState({\n    counter: 10\n  }).save();\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/louis/video/counter-next/pages/index.js"],"names":["Model","useAcey","CounterModel","data","options","state","counter","setState","get","save","cookie","Counter","connected","key","Home","decrement","increment","getInitialProps","query"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA8B,MAA9B;;IAEMC,Y;;;;;AACJ,wBAAYC,IAAZ,EAAkBC,OAAlB,EAA0B;AAAA;;AAAA;;AACxB,8BAAMD,IAAN,EAAYC,OAAZ;;AADwB,0DAIpB;AAAA,aAAM,MAAKC,KAAL,CAAWC,OAAjB;AAAA,KAJoB;;AAAA,gEAKd;AAAA,aAAM,MAAKC,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAE,MAAKE,GAAL,KAAa;AAAvB,OAAd,EAAyCC,IAAzC,GAAgDC,MAAhD,EAAN;AAAA,KALc;;AAAA,gEAMd;AAAA,aAAM,MAAKH,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAE,MAAKE,GAAL,KAAa;AAAvB,OAAd,EAAyCC,IAAzC,GAAgDC,MAAhD,EAAN;AAAA,KANc;;AAAA;AAEzB;;;EAHwBV,K;;AAU3B,IAAMW,OAAO,GAAG,IAAIT,YAAJ,CAAiB;AAACI,EAAAA,OAAO,EAAE;AAAV,CAAjB,EAA+B;AAACM,EAAAA,SAAS,EAAE,IAAZ;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CAA/B,CAAhB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7Bb,EAAAA,OAAO,CAAC,CACNU,OADM,CAAD,CAAP;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEA,OAAO,CAACI,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,OAAO,CAACH,GAAR,EAFH,EAGE;AAAQ,IAAA,OAAO,EAAEG,OAAO,CAACK,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD;;GAbuBF,I;UAEtBb,O;;;KAFsBa,I;;AAexBA,IAAI,CAACG,eAAL,GAAuB,gBAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACpC;AACAP,EAAAA,OAAO,CAACJ,QAAR,CAAiB;AAACD,IAAAA,OAAO,EAAE;AAAV,GAAjB,EAAgCG,IAAhC;AACD,CAHD","sourcesContent":["import { Model, useAcey} from 'acey'\n\nclass CounterModel extends Model {\n  constructor(data, options){\n    super(data, options)\n  }\n\n  get = () => this.state.counter\n  increment = () => this.setState({counter: this.get() + 1}).save().cookie()\n  decrement = () => this.setState({counter: this.get() - 1}).save().cookie()\n}\n\nconst Counter = new CounterModel({counter: 0}, {connected: true, key: 'counter'})\n\nexport default function Home() {\n\n  useAcey([\n    Counter\n  ])\n\n  return (\n    <div>\n      <button onClick={Counter.decrement}>decrement</button>\n      {Counter.get()}\n      <button onClick={Counter.increment}>increment</button>\n    </div>\n  )\n}\n\nHome.getInitialProps = ({ query }) => {\n  //Counter state updated on server side\n  Counter.setState({counter: 10}).save()\n}\n"]},"metadata":{},"sourceType":"module"}