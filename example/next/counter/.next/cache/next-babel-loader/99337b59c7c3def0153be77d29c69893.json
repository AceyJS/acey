{"ast":null,"code":"var _jsxFileName = \"/Users/louis/video/counter-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Model, useAcey } from 'acey';\n\nclass CounterModel extends Model {\n  constructor(data, options) {\n    super(data, options);\n\n    _defineProperty(this, \"get\", () => this.state.counter);\n\n    _defineProperty(this, \"increment\", () => this.setState({\n      counter: this.get() + 1\n    }));\n\n    _defineProperty(this, \"decrement\", () => this.setState({\n      counter: this.get() - 1\n    }));\n  }\n\n}\n\nconst Counter = new CounterModel({\n  counter: 0\n}, {\n  connected: true,\n  key: 'counter'\n});\nexport default function Home() {\n  useAcey([Counter]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: Counter.decrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"decrement\"), Counter.get(), __jsx(\"button\", {\n    onClick: Counter.increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"increment\"));\n}","map":{"version":3,"sources":["/Users/louis/video/counter-next/pages/index.js"],"names":["Model","useAcey","CounterModel","constructor","data","options","state","counter","setState","get","Counter","connected","key","Home","decrement","increment"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA8B,MAA9B;;AAEA,MAAMC,YAAN,SAA2BF,KAA3B,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,OAAZ;;AADwB,iCAIpB,MAAM,KAAKC,KAAL,CAAWC,OAJG;;AAAA,uCAKd,MAAM,KAAKC,QAAL,CAAc;AAACD,MAAAA,OAAO,EAAE,KAAKE,GAAL,KAAa;AAAvB,KAAd,CALQ;;AAAA,uCAMd,MAAM,KAAKD,QAAL,CAAc;AAACD,MAAAA,OAAO,EAAE,KAAKE,GAAL,KAAa;AAAvB,KAAd,CANQ;AAEzB;;AAH8B;;AAajC,MAAMC,OAAO,GAAG,IAAIR,YAAJ,CAAiB;AAACK,EAAAA,OAAO,EAAE;AAAV,CAAjB,EAA+B;AAACI,EAAAA,SAAS,EAAE,IAAZ;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CAA/B,CAAhB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE7BZ,EAAAA,OAAO,CAAC,CACNS,OADM,CAAD,CAAP;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEA,OAAO,CAACI,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,OAAO,CAACD,GAAR,EAFH,EAGE;AAAQ,IAAA,OAAO,EAAEC,OAAO,CAACK,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD","sourcesContent":["import { Model, useAcey} from 'acey'\n\nclass CounterModel extends Model {\n  constructor(data, options){\n    super(data, options)\n  }\n\n  get = () => this.state.counter\n  increment = () => this.setState({counter: this.get() + 1})\n  decrement = () => this.setState({counter: this.get() - 1})\n\n\n\n}\n\nconst Counter = new CounterModel({counter: 0}, {connected: true, key: 'counter'})\n\nexport default function Home() {\n\n  useAcey([\n    Counter\n  ])\n\n  return (\n    <div>\n      <button onClick={Counter.decrement}>decrement</button>\n      {Counter.get()}\n      <button onClick={Counter.increment}>increment</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}